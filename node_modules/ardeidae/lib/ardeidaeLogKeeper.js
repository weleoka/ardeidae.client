
/**
 * Message object
 */
function Message(userId, name, origin, message) {
  this.time = Date.now();
  this.name = name || 'undefined';
  this.origin = origin || 'undefined';
  this.userId = userId || 'error';
  this.message = message || 'error';
}

/**
 * LogKeeper handles all messages and stores for later retrival.
 */
function LogKeeper () {
  this.messageLog = [];            // Log for users messages
  this.serverMessageLog = [];  // Log for server messages.
}
LogKeeper.prototype = {
  getMessages: function () {
    return this.messageLog;
  },

  saveRegularMessage: function (id, name, origin, msg) {
    this.messageLog.push(new Message(id, name, origin, msg));
  },

  saveSystemMessage: function (id, name, origin, msg) {
    this.serverMessageLog.push(new Message(id, name, origin, msg));
  },
};


module.exports = LogKeeper;
